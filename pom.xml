<?xml version="1.0"?>
<!-- Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved. This product 
	is licensed to you under the Apache License, Version 2.0 (the "License"). 
	You may not use this product except in compliance with the License. This 
	product may include a number of subcomponents with separate copyright notices 
	and license terms. Your use of these subcomponents is subject to the terms 
	and conditions of the subcomponent's license, as noted in the LICENSE file. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.vmware.mangle</groupId>
	<artifactId>mangle-root</artifactId>
	<version>3.5.0</version>
	<packaging>pom</packaging>
	<name>mangle</name>
	<description>Mangle</description>
	<url>https://github.com/vmware/mangle</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
	</parent>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<licenses>
		<license>
			<name>License</name>
			<url>https://github.com/vmware/mangle/blob/master/LICENSE</url>
		</license>
		<license>
			<name>Notice</name>
			<url>https://github.com/vmware/mangle/blob/master/NOTICE</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven-compiler.version>3.7.0</maven-compiler.version>
		<spring.boot.version>2.2.13.RELEASE</spring.boot.version>
		<spring.cloud.version>2.0.2.RELEASE</spring.cloud.version>
		<springframework.version>5.3.18</springframework.version>
		<springframework-plugin.version>1.2.0.RELEASE</springframework-plugin.version>
		<swagger-version>2.9.2</swagger-version>
		<spring.hateoas.version>0.25.1.RELEASE</spring.hateoas.version>
		<spring.security.ldap.version>5.1.0.RELEASE</spring.security.ldap.version>
		<lombok.version>1.18.2</lombok.version>
		<testng.version>6.11</testng.version>
		<com.fasterxml.jackson.datatype.version>2.5.1</com.fasterxml.jackson.datatype.version>
		<checkstyle.version>3.0.0</checkstyle.version>
		<spring.security.core.version>5.3.11.RELEASE</spring.security.core.version>
		<spring.security.web.version>5.3.11.RELEASE</spring.security.web.version>
		<mvn.surefire.plugin.version>2.22.1</mvn.surefire.plugin.version>
		<jacoco.ant.version>0.7.8</jacoco.ant.version>
		<com.thoughtworks.xstream.version>1.4.19</com.thoughtworks.xstream.version>
		<junit.jupiter.version>5.3.1</junit.jupiter.version>
		<docker-java.version>3.1.0</docker-java.version>
		<com.jcraft.jsch.version>0.1.54</com.jcraft.jsch.version>
		<org.testng.version>6.8.8</org.testng.version>
		<allure.version>1.5.0.RC2</allure.version>
		<allure.reporting.version>2.3</allure.reporting.version>
		<wavefront-java-client-version>4.26</wavefront-java-client-version>
		<jacoco.version>0.8.2</jacoco.version>
		<java.ws.rs.version>2.1.1</java.ws.rs.version>
		<guava.version>30.0-jre</guava.version>
		<net.sf.dozer.version>5.5.1</net.sf.dozer.version>
		<jacoco.version>0.8.2</jacoco.version>
		<com.jcraft.jsch.version>0.1.54</com.jcraft.jsch.version>
		<net.sf.dozer.version>5.5.1</net.sf.dozer.version>
		<org.apache.httpcomponents.version>4.5.13</org.apache.httpcomponents.version>
		<httpcore.version>4.4.1</httpcore.version>
		<commons-httpclient.version>3.1</commons-httpclient.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<jclouds.driver.version>1.9.0</jclouds.driver.version>
		<skip.int.tests.report>true</skip.int.tests.report>
		<skip.dump>true</skip.dump>
		<skipUTs>false</skipUTs>
		<org.mockito.version>1.10.19</org.mockito.version>
		<org.mockito-core.version>2.21.0</org.mockito-core.version>
		<org.powermock.version>1.7.4</org.powermock.version>
		<glassfish.jersey.version>2.26</glassfish.jersey.version>
		<pf4j.version>3.3.1</pf4j.version>
		<pf4j-spring.version>0.5.0</pf4j-spring.version>
		<cassandra.migration.version>2.2.0</cassandra.migration.version>
		<hazelcast.version>3.11</hazelcast.version>
		<hazelcast-kubernetes.version>1.3.1</hazelcast-kubernetes.version>
		<org.json.version>20180130</org.json.version>
		<net.jpountz.lz4.version>1.3.0</net.jpountz.lz4.version>
		<log4j.version>2.17.0</log4j.version>
		<avro-version>1.10.2</avro-version>
		<asynchttpclient.version>2.12.3</asynchttpclient.version>
		<netty.version>4.1.68.Final</netty.version>
		<tomcat.version>9.0.54</tomcat.version>
		<netty-reactive-streams-version>2.0.5</netty-reactive-streams-version>
		<aws-sdk.version>1.11.579</aws-sdk.version>
		<azure-sdk.version>1.29.0</azure-sdk.version>
		<jackson.databind.version>2.10.1</jackson.databind.version>
		<allbegray.slack-api.version>1.7.0.RELEASE</allbegray.slack-api.version>
		<cassandra.migration.tool.version>2.1.9.0</cassandra.migration.tool.version>
		<com.wavefront.version>1.15</com.wavefront.version>
		<micrometer-registry-dynatrace>1.3.1</micrometer-registry-dynatrace>
		<mangle.services.build.directory>mangle-services/target</mangle.services.build.directory>
		<mangle.models.build.directory>mangle-models/target</mangle.models.build.directory>
		<mangle.utils.build.directory>mangle-utils/target</mangle.utils.build.directory>
		<mangle.metricreporter.build.directory>mangle-metric-reporter/target</mangle.metricreporter.build.directory>
		<mangle.task-framework.build.directory>mangle-task-framework/target</mangle.task-framework.build.directory>
		<mangle.default-plugin.build.directory>mangle-default-plugin/target</mangle.default-plugin.build.directory>
		<mangle.services.classes.directory>mangle-services/target/classes</mangle.services.classes.directory>
		<mangle.models.classes.directory>mangle-models/target/classes</mangle.models.classes.directory>
		<mangle.utils.classes.directory>mangle-utils/target/classes</mangle.utils.classes.directory>
		<mangle.metricreporter.classes.directory>mangle-metric-reporter/target/classes</mangle.metricreporter.classes.directory>
		<mangle.task-framework.classes.directory>mangle-metric-reporter/target/classes</mangle.task-framework.classes.directory>
		<mangle.default-plugin.classes.directory>mangle-default-plugin/target/classes</mangle.default-plugin.classes.directory>
		<mangle.services.source.directory>mangle-services/src/main/java</mangle.services.source.directory>
		<mangle.models.source.directory>mangle-models/src/main/java</mangle.models.source.directory>
		<mangle.utils.source.directory>mangle-utils/src/main/java</mangle.utils.source.directory>
		<mangle.metricreporter.source.directory>mangle-metric-reporter/src/main/java</mangle.metricreporter.source.directory>
		<mangle.task-framework.source.directory>mangle-task-framework/src/main/java</mangle.task-framework.source.directory>
		<mangle.default-plugin.source.directory>mangle-default-plugin/src/main/java</mangle.default-plugin.source.directory>
		<!--sonarqube properties -->
		<sonar.coverage.exclusions>**/com/vmware/mangle/model/**,**/com/vmware/mangle/constants/**,**/com/vmware/mangle/services/dto/**
			,**/com/vmware/mangle/services/enums/**,**/com/vmware/mangle/cassandra/**</sonar.coverage.exclusions>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.plugin</groupId>
				<artifactId>spring-plugin-core</artifactId>
				<version>${springframework-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.plugin</groupId>
				<artifactId>spring-plugin-metadata</artifactId>
				<version>${springframework-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-core</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-el</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-websocket</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.asynchttpclient</groupId>
				<artifactId>async-http-client</artifactId>
				<version>${asynchttpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-http</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler-proxy</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-buffer</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-socks</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-resolver-dns</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-epoll</artifactId>
				<version>${netty.version}</version>
				<classifier>linux-x86_64</classifier>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-kqueue</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.netty</groupId>
				<artifactId>netty-reactive-streams</artifactId>
				<version>${netty-reactive-streams-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro-version}</version>
			</dependency>
			<dependency>
				<groupId>com.vmware.mangle</groupId>
				<artifactId>mangle-models</artifactId>
				<version>${project.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.vmware.mangle</groupId>
				<artifactId>mangle-metric-reporter</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.vmware.mangle</groupId>
				<artifactId>mangle-utils</artifactId>
				<version>${project.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>servlet-api-2.5</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-epoll
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-http</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler-proxy</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-kqueue
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-buffer</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-socks</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-resolver-dns</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.typesafe.netty</groupId>
						<artifactId>netty-reactive-streams</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.vmware.mangle</groupId>
				<artifactId>mangle-vcenter-adapter-models</artifactId>
				<version>3.5.0</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk</artifactId>
				<version>${aws-sdk.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.web.version}</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-ec2</artifactId>
				<version>${aws-sdk.version}</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-rds</artifactId>
				<version>${aws-sdk.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure</artifactId>
				<version>${azure-sdk.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-hateoas</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.hateoas</groupId>
				<artifactId>spring-hateoas</artifactId>
				<version>${spring.hateoas.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter</artifactId>
				<version>${spring.cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<optional>true</optional>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-ldap</artifactId>
				<version>${spring.security.ldap.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jdk8</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-cbor</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-joda</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-base</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-parameter-names</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${com.thoughtworks.xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger-version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger-version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-bean-validators</artifactId>
				<version>${swagger-version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<artifactId>jackson-datatype-joda</artifactId>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<version>${com.fasterxml.jackson.datatype.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-base</artifactId>
				<version>${com.fasterxml.jackson.datatype.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${com.fasterxml.jackson.datatype.version}</version>
			</dependency>
			<dependency>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-testng-adaptor</artifactId>
				<version>${allure.version}</version>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-report-data</artifactId>
				<version>${allure.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-model</artifactId>
				<version>${allure.version}</version>
			</dependency>
			<dependency>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-report-builder</artifactId>
				<version>${allure.reporting.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>${net.sf.dozer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-beanutils</groupId>
						<artifactId>commons-beanutils</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.docker-java</groupId>
				<artifactId>docker-java</artifactId>
				<version>${docker-java.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.bouncycastle</groupId>
						<artifactId>bcpkix-jdk15on</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-http</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler-proxy</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-epoll
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-kqueue
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-buffer</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-socks</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>ch.ethz.ganymed</groupId>
				<artifactId>ganymed-ssh2</artifactId>
				<version>build210</version>
			</dependency>
			<dependency>
				<groupId>com.wavefront</groupId>
				<artifactId>java-client</artifactId>
				<version>${wavefront-java-client-version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-epoll
					</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>avro</artifactId>
						<groupId>org.apache.avro</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${java.ws.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>jsr311-api</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${com.jcraft.jsch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.inject</groupId>
				<artifactId>jersey-hk2</artifactId>
				<version>${glassfish.jersey.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.glassfish.hk2.external</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.annotation</groupId>
						<artifactId>javax.annotation-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.javassist</groupId>
						<artifactId>javassist</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${org.apache.httpcomponents.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jclouds.driver</groupId>
				<artifactId>jclouds-jsch</artifactId>
				<version>${jclouds.driver.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.jcraft</groupId>
						<artifactId>jsch</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${org.mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${org.mockito-core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${org.powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-support</artifactId>
				<version>${org.powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${org.powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-testng</artifactId>
				<version>${org.powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.pf4j</groupId>
				<artifactId>pf4j</artifactId>
				<version>${pf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.pf4j</groupId>
				<artifactId>pf4j-spring</artifactId>
				<version>${pf4j-spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.pf4j</groupId>
						<artifactId>pf4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.vmware.mangle</groupId>
				<artifactId>mangle-task-framework</artifactId>
				<version>${project.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-epoll
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-http</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler-proxy</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-kqueue
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-buffer</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-socks</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-resolver-dns</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.typesafe.netty</groupId>
						<artifactId>netty-reactive-streams</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.vmware.mangle</groupId>
				<artifactId>mangle-default-plugin</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-cassandra</artifactId>
				<version>${spring.boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.datastax.cassandra</groupId>
				<artifactId>cassandra-driver-core</artifactId>
				<version>${cassandra-driver.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-buffer</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.cognitor.cassandra</groupId>
				<artifactId>cassandra-migration-spring-boot-starter</artifactId>
				<version>${cassandra.migration.version}</version>
			</dependency>
			<dependency>
				<groupId>net.jpountz.lz4</groupId>
				<artifactId>lz4</artifactId>
				<version>${net.jpountz.lz4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.byteman</groupId>
				<artifactId>byteman</artifactId>
				<version>3.0.10</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-all</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-kubernetes</artifactId>
				<version>${hazelcast-kubernetes.version}</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${org.json.version}</version>
			</dependency>
			<dependency>
		           <groupId>org.apache.logging.log4j</groupId>
			   <artifactId>log4j-core</artifactId>
			   <version>${log4j.version}</version>
			   <exclusions>
				<exclusion>
				     <groupId>org.apache.logging.log4j</groupId>
				     <artifactId>log4j-api</artifactId>
				</exclusion>
			  </exclusions>
		      </dependency>
		      <dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.allbegray</groupId>
				<artifactId>slack-api</artifactId>
				<version>${allbegray.slack-api.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-http</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-handler-proxy</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>
						netty-transport-native-epoll
					</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-buffer</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-codec-socks</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty-resolver-dns</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.typesafe.netty</groupId>
						<artifactId>netty-reactive-streams</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.smartcat</groupId>
				<artifactId>cassandra-migration-tool</artifactId>
				<version>${cassandra.migration.tool.version}</version>
			</dependency>
			<dependency>
				<groupId>com.wavefront</groupId>
				<artifactId>wavefront-sdk-java</artifactId>
				<version>${com.wavefront.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-aop</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<compilerArgument>-Xlint:unchecked</compilerArgument>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle.version}</version>
					<executions>
						<execution>
							<id>checkstyle-check</id>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<includeTestResources>false</includeTestResources>
						<includeResources>false</includeResources>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<headerLocation>checkstyle/header.regexp</headerLocation>
						<configLocation>checkstyle/checkstyle.xml</configLocation>
						<suppressionsLocation>checkstyle/checkstyle-suppression.xml</suppressionsLocation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${mvn.surefire.plugin.version}</version>
					<configuration>
						<includes>
							<include>**/com/vmware/mangle/unittest/**</include>
						</includes>
						<skip>${skipUTs}</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<excludes>
							<exclude>*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-instrument</id>
							<goals>
								<goal>instrument</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-restore-instrumented-classes</id>
							<goals>
								<goal>restore-instrumented-classes</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-report</id>
							<phase>package</phase>
							<configuration>
								<excludes>
									<exclude>**/CassandraConfig.class</exclude>
									<exclude>**/CassandraConfig.java</exclude>
								</excludes>
							</configuration>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<!--Goal to merge all the jacoco exec files to generate consolidated 
							jacoco-report -->
						<!--includes all the report that are of the format "*it*.exec" -->
						<!--Generates a file jacoco-it.exec inside target -->
						<execution>
							<id>merge-test-data</id>
							<goals>
								<goal>merge</goal>
							</goals>
							<configuration>
								<destFile>target/jacoco-final.exec</destFile>
								<skip>${skip.dump}</skip>
								<includes>
									<include />
								</includes>
								<fileSets>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>${mangle.services.build.directory}</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>${mangle.metricreporter.build.directory}</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>${mangle.models.build.directory}</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>${mangle.utils.build.directory}</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>${mangle.task-framework.build.directory}</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>${mangle.default-plugin.build.directory}</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
									<fileSet
										implementation="org.apache.maven.shared.model.fileset.FileSet">
										<directory>target</directory>
										<includes>
											<include>*.exec</include>
										</includes>
									</fileSet>
								</fileSets>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--plugin to generate code coverage report from the exec files generated -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>generate-report</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<skip>${skip.int.tests.report}</skip>
								<target>
									<!-- Execute an ant task within maven -->
									<echo message="Generating JaCoCo Reports" />
									<taskdef name="report"
										classname="org.jacoco.ant.ReportTask">
										<classpath
											path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
									</taskdef>
									<mkdir dir="${basedir}/target/coverage-report" />
									<report>
										<executiondata>
											<fileset dir="${basedir}">
												<include name="target/jacoco-final.exec" />
											</fileset>
										</executiondata>
										<structure name="Mangle Code Coverage Report">
											<group name="coverage">
												<classfiles>
													<fileset dir="${mangle.services.classes.directory}" />
													<fileset dir="${mangle.utils.classes.directory}" />
													<fileset
														dir="${mangle.metricreporter.classes.directory}" />
													<fileset
														dir="${mangle.default-plugin.classes.directory}" />
													<fileset
														dir="${mangle.task-framework.classes.directory}" />
												</classfiles>
												<sourcefiles encoding="UTF-8">
													<fileset dir="${mangle.services.source.directory}" />
													<fileset
														dir="${mangle.metricreporter.source.directory}" />
													<fileset dir="${mangle.utils.source.directory}" />
													<fileset
														dir="${mangle.task-framework.source.directory}" />
													<fileset
														dir="${mangle.default-plugin.source.directory}" />
												</sourcefiles>
											</group>
										</structure>
										<html destdir="${basedir}/target/coverage-report/html" />
										<xml
											destfile="${basedir}/target/coverage-report/coverage-report.xml" />
										<csv
											destfile="${basedir}/target/coverage-report/coverage-report.csv" />
									</report>
								</target>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.jacoco</groupId>
							<artifactId>org.jacoco.ant</artifactId>
							<version>${jacoco.ant.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.5.0.1254</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>mangle-models</module>
				<module>mangle-metric-reporter</module>
				<module>mangle-utils</module>
				<module>mangle-task-framework</module>
				<module>mangle-test-plugin</module>
				<module>mangle-default-plugin</module>
				<module>mangle-ui</module>
				<module>mangle-services</module>
			</modules>
		</profile>
		<profile>
			<id>build-without-ui</id>
			<modules>
				<module>mangle-models</module>
				<module>mangle-metric-reporter</module>
				<module>mangle-utils</module>
				<module>mangle-task-framework</module>
				<module>mangle-test-plugin</module>
				<module>mangle-default-plugin</module>
				<module>mangle-services</module>
			</modules>
		</profile>
		<profile>
			<id>byteman</id>
			<modules>
				<module>mangle-byteman-root</module>
			</modules>
		</profile>
		<profile>
			<id>vcenter-adapter</id>
			<modules>
				<module>mangle-vcenter-adapter-models</module>
				<module>mangle-vcenter-adapter</module>
			</modules>
		</profile>
		<profile>
			<id>build-all</id>
			<modules>
				<module>mangle-byteman-root</module>
				<module>mangle-models</module>
				<module>mangle-metric-reporter</module>
				<module>mangle-utils</module>
				<module>mangle-task-framework</module>
				<module>mangle-test-plugin</module>
				<module>mangle-default-plugin</module>
				<module>mangle-ui</module>
				<module>mangle-services</module>
				<module>mangle-vcenter-adapter</module>
			</modules>
		</profile>
	</profiles>
</project>
